name: Promote Python Package

on:
  # workflow_dispatch:
  #   inputs:
  #     package_version:
  #       description: 'Package version to promote (e.g., 0.0.1)'
  #       required: true
  #       type: string
  repository_dispatch:
    types:
      - promote_package


env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write
  contents: read

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Checking the user details
        run: |
          cloudsmith whoami 
      
      - name: Tag package as ready-for-production
        run: |
          echo "Tagging ${{ env.PACKAGE_NAME }} v${{ github.event.client_payload.package_version }}"
          cloudsmith tags add ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/${{ github.event.client_payload.package_name }} "ready-for-production"

      - name: Get package identifier and promote
        run: |
          # Query for the package and get its identifier
          PACKAGE_QUERY="tag:ready-for-production"
          echo "Searching for package with query: $PACKAGE_QUERY"
          
          PACKAGE_DATA=$(cloudsmith list packages ${{ vars.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)
          echo "$PACKAGE_DATA"

          PACKAGE_COUNT=$(echo "$PACKAGE_DATA" | jq '.data | length')
          if [ "$PACKAGE_COUNT" -eq 0 ]; then
            echo "No packages found with tag 'ready-for-production'"
            exit 0
          fi

          echo "$PACKAGE_DATA" | jq -r '.data[] | .identifier_perm' | while read -r IDENTIFIER; do
            echo "Found package identifier: $IDENTIFIER"
            cloudsmith mv --yes --verbose \
              "${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER" \
              "${{ env.CLOUDSMITH_PRODUCTION_REPO }}"
          done
        shell: bash
